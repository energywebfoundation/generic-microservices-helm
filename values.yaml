# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Pod disruption budget will be created only if replicaCount > 1
pdb:
  enabled: false
  minAvailable: 1

deploymentStrategy: RollingUpdate

restartPolicy: Always

terminationGracePeriodSeconds: 30

readinessProbe:
  enabled: false
  httpGet:
    path: /
    port: http
    scheme: HTTP
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
  initialDelaySeconds: 60

livenessProbe:
  enabled: false
  httpGet:
    path: /
    port: http
    scheme: HTTP
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
  initialDelaySeconds: 60

pvc:
  enabled: false
  accessModes: ReadWriteOnce
  storageClassName: default
  storage: 20Gi
  mountPath: "/tmp"

container:
  ports:
    http: 80

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  command: []
  args: []
  tty:
    enabled: false

env: {}

envFrom: {}

sealedSecret:
  enabled: false
  annotations: {}
  encryptedData: {}


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  portName: ""
  type: ClusterIP
  ports:
    - port: 80
      name: http

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Extra lables to be added to all resources
extraLabels: {}

sidecars: []
# e.g.
# sidecars:
#   - name: your-image-name
#     image: your-image
#     imagePullPolicy: Always
#     ports:
#       - name: portname
#         containerPort: 1234

## @param extraVolumeMounts Array to add extra mount
extraVolumeMounts: []
  # e.g
  # - mountPath: /cache
  #   name: volume-name

## @param extraVolumes Array to add extra volumes
extraVolumes: []
  # e.g
  # - name: volume-name
  #   persistentVolumeClaim:
  #     claimName: volume-claim-name

initContainers: {}
# e.g.
# initContainers:
#   - name: init-container-name
#     image: init-container-image
#     command: ["init-container-command"]
#     imagePullPolicy: Always
#     env:
#       - name: some-name
#         value: some-value
#     envFrom:
#       - secretRef:
#           name: some-secret-ref

# Allows you to add any config files in specified mount path
configFiles: {}
  # config.yml: |
  #   key: value
  # example.json: |
  #   {
  #     "key1": "value1",
  #     "key2": "value2"
  #   }

configFilesMountPath: /usr/share/config
